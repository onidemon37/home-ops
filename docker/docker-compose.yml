version: '3.8'

services:
  # PSQL Adminer
  adminer:
    container_name: "${APP_NAME}-adminer"
    image: "adminer:latest"
    restart: always
    networks:
      - monitoring
    ports:
      - "10088:8080"

  # Cadvisor
  cadvisor:
    image: "gcr.io/cadvisor/cadvisor"
    container_name: "${APP_NAME}-cadvisor"
    volumes:
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
    ports:
      - "8080:8080"
    networks:
      - monitoring

  cloudflared:
    container_name: "${APP_NAME}-cloudflared"
    image: cloudflare/cloudflared:latest
    command:
      - tunnel
      - --no-autoupdate
      - run
      - --token
      - "${CLOUDFLARED_TOKEN}"
      # docker run cloudflare/cloudflared:latest tunnel --no-autoupdate run --token "${CLOUDFLARED_TOKEN}"
    networks:
      - monitoring

  elasticsearch:
    container_name: "${APP_NAME}-elasticsearch"
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    restart: "unless-stopped"
    networks:
      - monitoring

  graylog:
    container_name: "${APP_NAME}-graylog"
    image: "graylog/graylog:5.1.2"
    volumes:
      - graylog_data:/usr/share/graylog/data
      - ./graylog/:/usr/share/graylog/data/data
    environment:
      ROOT_TIMEZONE: "${TIMEZONE}"
      GRAYLOG_TIMEZONE: "${TIMEZONE}"
      # CHANGE ME (must be at least 16 characters)! This is not your password, this is meant for salting the password below.
      GRAYLOG_PASSWORD_SECRET: ""
      # Username is "admin"
      # Password is "admin", change this to your own hashed password. 'echo -n "password" | sha256sum'
      GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_PASSWORD_HASH}"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://127.0.0.1:9000/"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
      #GRAYLOG_ELASTICSEARCH_HOSTS: "https://admin:admin@192.168.122.15:9200"
      entrypoint: "/usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh"
    depends_on:
      - mongodb
      - elasticsearch
    networks:
      - monitoring
    ports:
        # Graylog web interface and REST API
      - 9000:9000
        # Syslog UDP
      - 1514:1514/udp
        # Syslog TCP
      - 1514:1514
    restart: "unless-stopped"

  grafana:
    container_name: "${APP_NAME}-grafana"
    image: "grafana/grafana:10.3.4"
    ports:
      - "10030:3000"
    volumes:
      - "./grafana/provisioning:/etc/grafana/provisioning/"
      - "grafana_data:/var/lib/grafana"
    networks:
      - monitoring
    depends_on:
      - "influxdb"
    environment:
      # Change this to your time zone, valid time zones can be found here: https://www.joda.org/joda-time/timezones.html
      TZ: "${TIMEZONE}"
      GF_SECURITY_ADMIN_USER: "${GRAFANA_ADMIN_USER}"
      GF_DATABASE_TYPE: "postgres"
      GF_DATABASE_HOST: "${GRAFANA_DATABASE_HOST}:${GRAFANA_DATABASE_PORT}"
      GF_DATABASE_NAME: "${GRAFANA_DATABASE}"
      GF_DATABASE_USER: "${GRAFANA_DATABASE_USER}"
      GF_DATABASE_PASSWORD: "${GRAFANA_DATABASE_PASSWORD}"
      GF_PATHS_PROVISIONING: "/etc/grafana/provisioning"
      GF_DATABASE: "${GRAFANA_DATABASE}"
      GF_PLUGINS_ENABLE_ALPHA: true
    restart: "unless-stopped"

  # influcdb
  influxdb:
    container_name: "${APP_NAME}-influxdb"
    environment:
      - "DOCKER_INFLUXDB_INIT_MODE=${INFLUX_MODE}"
      - "DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_USERNAME}"
      - "DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_PASSWORD}"
      - "DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG}"
      - "DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_BUCKET}"
      - "DOCKER_INFLUXDB_INIT_RETENTION=${INFLUX_RETENTION}"
      - "TZ=${TIMEZONE}"
    image: "influxdb:2.6.1"
    ports:
      - '10086:8086'
    volumes:
      - "influxdb2_data:/var/lib/influxdb2"
    networks:
      - monitoring
    restart: "unless-stopped"

  loki:
    container_name: "${APP_NAME}-loki"
    image: "grafana/loki:2.9.4"
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki:/etc/loki/
      - /tmp/wal:/tmp/wal
    networks:
      - monitoring

  promtail:
    container_name: "${APP_NAME}-promtail"
    image: "grafana/promtail:2.9.4"
    restart: unless-stopped
    volumes:
      - ./promtail:/etc/promtail
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring

  mongodb:
    container_name: "${APP_NAME}-mongodb"
    image: "mongo:7.0.5"
    environment:
      - mongo_initdb_root_username="${MONGO_INIT_ROOT_USERNAME}"
      - mongo_initdb_root_password="${MONGO_INIT_ROOT_PASSWORD}"
    volumes:
      - "mongodb_data:/data/db"
    restart: unless-stopped
    ports:
      - "27017:27017"
    networks:
      - monitoring

  netdata:
    image: netdata/netdata
    container_name: "${APP_NAME}-netdata"
    pid: host
    network_mode: host
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - ./netdata:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  node-exporter:
    image: prom/node-exporter:latest
    container_name: "${APP_NAME}-node-exporter"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    volumes:
      - '/proc:/host/proc:ro'
      - '/sys:/host/sys:ro'
      - '/:/rootfs:ro'
    ports:
      - 9100:9100
    networks:
      - monitoring

  prometheus:
    container_name: "${APP_NAME}-prometheus"
    image: "prom/prometheus:v2.50.0"
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "10090:9090"
    links:
      - cadvisor:cadvisor
    networks:
      - monitoring
    restart: unless-stopped

networks:
  monitoring:
    driver: bridge

volumes:
  grafana_data:
  graylog_data:
  influxdb2_data:
  mongodb_config:
  mongodb_data:
  elasticsearch_data:
  prometheus_data:
  netdatalib:
  netdatacache:
